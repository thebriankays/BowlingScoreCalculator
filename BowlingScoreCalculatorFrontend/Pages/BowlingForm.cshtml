@page
@model BowlingScoreCalculatorFrontend.Pages.BowlingFormModel
@{
    ViewData["Title"] = "Bowling Score Calculator";
}

<h2>Bowling Score Calculator</h2>

<form id="bowlingForm">
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Frame</th>
                    <th>Roll 1</th>
                    <th>Roll 2</th>
                    <th>Roll 3</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < 10; i++)
                {
                    <tr>
                        <td>@(i + 1)</td>
                        <td>
                            <input id="frame-@(i + 1)-roll-1" type="number" class="form-control" min="0" max="10"
                                   name="Frames[@i].FirstRoll" value="@Model.Frames[i].FirstRoll" />
                        </td>
                        <td>
                            <input id="frame-@(i + 1)-roll-2" type="number" class="form-control" min="0" max="10"
                                   name="Frames[@i].SecondRoll" value="@Model.Frames[i].SecondRoll"
                                   style="@(Model.Frames[i].FirstRoll == 10 && i < 9 ? "display:none;" : "display:block;")" />
                        </td>
                        @if (i == 9)
                        {
                            <td>
                                <input id="frame-10-roll-3" type="number" class="form-control" min="0" max="10"
                                       name="Frames[9].ThirdRoll" value="@Model.Frames[9].ThirdRoll" />
                            </td>
                        }
                        else
                        {
                            <td></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</form>

<div class="mt-3">
    <h4>Total Score: <span id="totalScore">@Model.Score</span></h4>
    <div id="spinner" class="spinner-border text-primary" role="status" style="display: none;">
        <span class="sr-only">Calculating...</span>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        let debounceTimer;

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('bowlingForm');

            form.addEventListener('input', function () {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(calculateScore, 300);

                handleRollChange();
            });
        });

        function handleRollChange() {
            const form = document.getElementById('bowlingForm');

            Array.from(form.elements).forEach(el => {
                const match = el.name.match(/Frames\[(\d+)\]\.FirstRoll/);
                if (match) {
                    const frameIndex = parseInt(match[1]);
                    const firstRollInput = el;
                    const secondRollInput = document.querySelector(`#frame-${frameIndex + 1}-roll-2`);
                    if (firstRollInput.value == 10 && frameIndex < 9) {
                        secondRollInput.style.display = 'none';
                        secondRollInput.value = 0; 
                    } else {
                        secondRollInput.style.display = 'block';
                    }
                }
            });
        }

        async function calculateScore() {
            const form = document.getElementById('bowlingForm');
            const formData = new FormData(form);
            const frames = [];
            for (let i = 0; i < 10; i++) {
                const frame = {
                    FirstRoll: parseInt(formData.get(`Frames[${i}].FirstRoll`)) || 0,
                    SecondRoll: parseInt(formData.get(`Frames[${i}].SecondRoll`)) || 0,
                    ThirdRoll: i === 9 ? parseInt(formData.get(`Frames[9].ThirdRoll`)) || 0 : null
                };
                frames.push(frame);
            }

            try {
                document.getElementById('spinner').style.display = 'inline-block';
                document.getElementById('totalScore').textContent = '';

                const response = await fetch('https://localhost:7037/api/bowling/calculate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(frames)
                });

                if (response.ok) {
                    const data = await response.json();
                    document.getElementById('totalScore').textContent = data.score;
                } else {
                    document.getElementById('totalScore').textContent = 'Error calculating score';
                }
            } catch (error) {
                console.error('Error:', error);
                document.getElementById('totalScore').textContent = 'Error calculating score';
            } finally {
                document.getElementById('spinner').style.display = 'none';
            }
        }
    </script>
}

